plugins {
    id 'java'
    id "com.github.johnrengelman.shadow" version "8.1.1"
}

group = 'ga.justreddy.wiki'
version = '1.0.0'

repositories {
    mavenCentral()
    maven {
        name = "spigotmc-repo"
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }

    maven {
        url = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
    }

    maven {
        url = "https://jitpack.io"
    }

}

dependencies {
    compileOnly "org.spigotmc:spigot-api:1.20.4-R0.1-SNAPSHOT"
    implementation "com.alessiodp.libby:libby-bukkit:2.0.0-SNAPSHOT"
    compileOnly 'com.j256.ormlite:ormlite-jdbc:6.1'
    annotationProcessor("com.j256.ormlite:ormlite-jdbc:6.1")
    annotationProcessor("org.projectlombok:lombok:1.18.22")
    compileOnly "org.projectlombok:lombok:1.18.22"
    compileOnly 'com.github.Revxrsal.Lamp:common:3.2.1'
    compileOnly 'com.github.Revxrsal.Lamp:bukkit:3.2.1'
    implementation "net.kyori:adventure-platform-bukkit:4.3.2"
    compileOnly "net.kyori:adventure-text-minimessage:4.16.0"


}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

compileJava {
    options.compilerArgs += ["-parameters"]
}
tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    options.compilerArgs += ["-parameters"]
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

ext.set('output', "./runtime/plugins")

shadowJar {
    def output = rootProject.ext.get('output')

    destinationDirectory = file("$output")
    archiveFileName = "WhalePunishments-${version}.jar"

    relocate("com.alessiodp.libby", "ga.justreddy.wiki.whalepunishments.libs.libby")
    minimize();
}

build.dependsOn(shadowJar)
